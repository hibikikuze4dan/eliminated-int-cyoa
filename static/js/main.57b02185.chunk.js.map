{"version":3,"sources":["redux/selectors.js","components/dialog/breakdown-table/index.jsx","styles/index.js","components/dialog/index.jsx","components/application-bar/index.js","redux/actions.js","components/drawer/index.js","components/navigation/index.js","components/arrow-nav/index.js","components/choice-card/index.js","components/choice-list/index.js","components/page/index.js","App.js","serviceWorker.js","data/index.js","redux/utils.js","redux/reducers.js","redux/store.js","index.js"],"names":["getRequiredDrawbacks","state","get","getLocation","getChoices","getSections","createSelector","outline","getSectionTitles","sections","map","section","getSectionTitlesArray","reduce","acc","curr","key","accumulator","push","title","link","getPreviousAndNextSection","location","index","findIndex","val","length","getLocationData","getLocationChoices","choices","List","getLocationChoicesNames","toJS","choice","getExpressionAndAccentChoices","concat","getDrawbacks","getDisabledDrawbacks","relevantChoices","drawbacks","requiredDrawbacks","drawback","filter","includes","BreakdownTable","breakdown","Grid","container","spacing","item","xs","Typography","variant","startCase","appStyles","makeStyles","div","backgroundColor","textAlign","height","minHeight","window","innerHeight","applicationBarStyles","appBar","breakdownButton","color","fontWeight","iconButton","padding","dialogStyles","dialog","gridWrapperStyles","grid","cardStyles","button","textTransform","alignItems","label","fontSize","description","paper","openerStyles","paddingBottom","drawerStyles","drawer","selectedButton","ChoicesDialog","open","handleClose","theme","useTheme","fullScreen","useMediaQuery","breakpoints","only","classes","styles","Dialog","fullWidth","onClose","DialogTitle","justify","style","alignSelf","IconButton","onClick","DialogContent","defaultProps","connect","drawbacksRequired","withWidth","handleHamburgerClick","drawerOpen","width","useState","openDialog","toggleDialog","AppBar","position","Toolbar","margin","updateLocation","scrollTo","top","type","payload","sectionActions","ass","gender","intelligence","expression","accent","hair","breasts","hips","pussy","cock_size","cock_type","body_types","companions","perks_and_powers","other_stuff","jobs","NavigationDrawer","handleBackgroundClick","Drawer","ModalProps","onBackdropClick","anchor","Button","component","Link","to","className","Navigator","handleDrawerToggle","prevNext","ChoiceCard","data","handleClick","picked","disabled","buttonStyles","imageSection","objectFit","src","loader","CircularProgress","unloader","Card","root","personality_score","content","console","log","columns","sm","md","lg","xl","locationChoices","disabledDrawbacks","GridList","cols","cellHeight","justifyContent","GridListTile","dispatch","ownProps","quickLinks","Divider","path","render","Boolean","hostname","match","text","updateChoiceSection","updatedChoices","set","singleChoiceUpdate","currentChoices","isEqual","pop","getAmountOfDrawbacksTaken","multiChoiceUpdate","choiceType","currentChoice","delete","getRelevantDrawback","relevantDrawback","find","expAccUpdate","currentDrawbacks","otherRelevantDrawback","updatedState","newState","values","ind","size","sum","multiSectionUpdate","initialState","fromJS","href","split","cyoaText","default","initRequiredDrawbacks","value","toOrderedMap","isKeyed","toMap","toList","singleChoiceSections","expressionAndAccent","multiChoiceSections","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57b02185.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nimport { List } from \"immutable\";\n\nexport const getRequiredDrawbacks = (state) => state.get(\"requiredDrawbacks\");\n\nexport const getOutline = (state) => state.get(\"outline\");\n\nexport const getLocation = (state) => state.get(\"location\");\n\nexport const getChoices = (state) => state.get(\"choices\");\n\nexport const getSections = createSelector(getOutline, (outline) => {\n  return outline.get(\"sections\");\n});\n\nexport const getSectionTitles = createSelector(getSections, (sections) => {\n  return sections.map((section) => section.get(\"title\"));\n});\n\nexport const getSectionTitlesArray = createSelector(\n  getSectionTitles,\n  (sections) => {\n    return sections.reduce((acc, curr, key) => {\n      const accumulator = acc;\n      accumulator.push({ title: curr, link: key });\n      return accumulator;\n    }, []);\n  }\n);\n\nexport const getPreviousAndNextSection = createSelector(\n  [getSectionTitlesArray, getLocation],\n  (sections, location) => {\n    const index = sections.findIndex((val) => {\n      return val.link === location;\n    });\n    return [\n      sections[index - 1] ? sections[index - 1] : sections[sections.length - 1],\n      sections[index + 1] ? sections[index + 1] : sections[0],\n    ];\n  }\n);\n\nexport const getLocationData = createSelector(\n  [getLocation, getSections],\n  (location, sections) => {\n    return sections.get(location);\n  }\n);\n\nexport const getLocationChoices = createSelector(\n  [getLocation, getChoices],\n  (location, choices) => {\n    return choices.get(location, List([]));\n  }\n);\n\nexport const getLocationChoicesNames = createSelector(\n  [getLocationChoices],\n  (choices) => {\n    return choices.toJS().map((choice) => choice.title);\n  }\n);\n\nexport const getExpressionAndAccentChoices = createSelector(\n  [getChoices],\n  (choices) => {\n    return choices.get(\"expression\").concat(choices.get(\"accent\"));\n  }\n);\n\nexport const getDrawbacks = createSelector([getChoices], (choices) => {\n  return choices.get(\"drawbacks\");\n});\n\nexport const getDisabledDrawbacks = createSelector(\n  [getExpressionAndAccentChoices, getDrawbacks],\n  (relevantChoices, drawbacks) => {\n    const requiredDrawbacks = relevantChoices.reduce((acc, curr) => {\n      const accumulator = acc;\n      if (curr?.drawback) {\n        accumulator.push(curr?.drawback);\n      }\n      return accumulator;\n    }, []);\n    return drawbacks\n      .filter((drawback) => {\n        return requiredDrawbacks.includes(drawback.title);\n      })\n      .reduce((curr, acc) => {\n        const accumulator = curr;\n        accumulator.push(acc.title);\n        return accumulator;\n      }, []);\n  }\n);\n","import React, { Fragment } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport map from \"lodash/map\";\nimport startCase from \"lodash/startCase\";\n\nconst BreakdownTable = ({ breakdown }) => {\n  return (\n    <Grid container spacing={4}>\n      {map(breakdown.toJS(), (choices, section) => {\n        return (\n          <Fragment key={`breakdown-dialog-${section}`}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">{startCase(section)}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              {map(choices, (choice) => {\n                return (\n                  <Typography key={`choice-${section}-${choice.title}`}>\n                    {choice.title}\n                  </Typography>\n                );\n              })}\n            </Grid>\n          </Fragment>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default BreakdownTable;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst appStyles = makeStyles({\n  div: {\n    backgroundColor: \"#ECD078\",\n    textAlign: \"center\",\n    height: \"fit-content\",\n    minHeight: window.innerHeight,\n  },\n});\n\nconst applicationBarStyles = makeStyles({\n  appBar: {\n    backgroundColor: \"#D95B43\",\n  },\n  breakdownButton: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  iconButton: {\n    padding: \"16px 16px 16px 0\",\n    \"&:hover\": {\n      backgroundColor: \"unset\",\n    },\n  },\n});\n\nconst dialogStyles = makeStyles({\n  dialog: {\n    backgroundColor: \"pink\",\n  },\n});\n\nconst gridWrapperStyles = makeStyles({\n  grid: {\n    padding: \"16px\",\n    backgroundColor: \"#ECD078\",\n    height: \"min-heeight\",\n  },\n});\n\nconst cardStyles = makeStyles({\n  button: {\n    textTransform: \"none\",\n    alignItems: \"baseline\",\n  },\n  label: {\n    height: \"100%\",\n  },\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n  },\n  description: {\n    fontSize: \"1rem\",\n  },\n  paper: {\n    alignItems: \"baseline\",\n  },\n});\n\nconst openerStyles = makeStyles({\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n  },\n  description: {\n    paddingBottom: \"16px\",\n  },\n});\n\nconst drawerStyles = makeStyles({\n  drawer: {\n    backgroundColor: \"pink\",\n  },\n  selectedButton: {\n    backgroundColor: \"#D95B43\",\n  },\n});\n\nexport default {\n  applicationBarStyles,\n  appStyles,\n  dialogStyles,\n  gridWrapperStyles,\n  cardStyles,\n  openerStyles,\n  drawerStyles,\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { connect } from \"react-redux\";\n\nimport BreakdownTable from \"./breakdown-table\";\nimport styles from \"../../styles\";\nimport { getChoices } from \"../../redux/selectors\";\n\nconst ChoicesDialog = ({ open, handleClose, breakdown, sections }) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const classes = styles.dialogStyles();\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      fullWidth\n      open={open}\n      onClose={() => handleClose(!open)}\n      classes={{ paper: classes.dialog }}\n    >\n      <DialogTitle>\n        <Grid container justify=\"space-between\">\n          <Typography variant=\"h4\" style={{ alignSelf: \"center\" }}>\n            Choices Made\n          </Typography>\n          <IconButton onClick={() => handleClose(!open)}>\n            <CloseIcon />\n          </IconButton>\n        </Grid>\n      </DialogTitle>\n      <DialogContent>\n        <BreakdownTable breakdown={breakdown} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nChoicesDialog.defaultProps = {\n  open: false,\n  handleClose: () => null,\n};\n\nconst mapStateToProps = (state) => ({\n  breakdown: getChoices(state),\n});\n\nexport default connect(mapStateToProps)(ChoicesDialog);\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Grid,\n  IconButton,\n  Typography,\n  withWidth,\n} from \"@material-ui/core\";\nimport TableChart from \"@material-ui/icons/TableChart\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { connect } from \"react-redux\";\n\nimport { getRequiredDrawbacks } from \"../../redux/selectors\";\nimport Dialog from \"../dialog\";\n\nconst ApplicationBar = ({\n  drawbacksRequired,\n  handleHamburgerClick,\n  drawerOpen,\n  width,\n}) => {\n  const [openDialog, toggleDialog] = useState(false);\n\n  return (\n    <AppBar position=\"sticky\" style={{ backgroundColor: \"#FED2DF\" }}>\n      <Toolbar>\n        <Grid container justify=\"space-between\">\n          <IconButton onClick={() => handleHamburgerClick(!drawerOpen)}>\n            <MenuIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => toggleDialog(!openDialog)}\n            style={{\n              margin: [\"lg\", \"xl\"].includes(width) ? \"0 0 0 64px\" : \"initial\",\n            }}\n          >\n            <TableChart />\n          </IconButton>\n          <Typography style={{ alignSelf: \"center\", color: \"black\" }}>\n            {[\"lg\", \"xl\"].includes(width) ? \"Drawbacks Required: \" : \"DBs: \"}\n            {drawbacksRequired}\n          </Typography>\n        </Grid>\n      </Toolbar>\n      <Dialog open={openDialog} handleClose={() => toggleDialog(!openDialog)} />\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  drawbacksRequired: getRequiredDrawbacks(state),\n});\n\nexport default connect(mapStateToProps)(withWidth()(ApplicationBar));\n","export const updateLocation = (location) => {\n  window.scrollTo({ top: 0 });\n  return {\n    type: \"UPDATE_LOCATION\",\n    payload: location,\n  };\n};\n\nexport const updateAss = (ass) => ({\n  type: \"UPDATE_ASS\",\n  payload: ass,\n});\n\nexport const updateGender = (payload) => ({\n  type: \"UPDATE_GENDER\",\n  payload: payload,\n});\n\nexport const updateIntelligence = (payload) => ({\n  type: \"UPDATE_INTELLIGENCE\",\n  payload: payload,\n});\n\nexport const updateHeight = (payload) => ({\n  type: \"UPDATE_HEIGHT\",\n  payload: payload,\n});\n\nexport const updateExpression = (payload) => ({\n  type: \"UPDATE_EXPRESSION\",\n  payload: payload,\n});\n\nexport const updateAccent = (payload) => ({\n  type: \"UPDATE_ACCENT\",\n  payload: payload,\n});\n\nexport const updateHair = (payload) => ({\n  type: \"UPDATE_HAIR\",\n  payload: payload,\n});\n\nexport const updateBreasts = (payload) => ({\n  type: \"UPDATE_BREASTS\",\n  payload: payload,\n});\n\nexport const updateMidSection = (payload) => ({\n  type: \"UPDATE_MID-SECTION\",\n  payload: payload,\n});\n\nexport const updateHips = (payload) => ({\n  type: \"UPDATE_HIPS\",\n  payload: payload,\n});\n\nexport const updatePussy = (payload) => ({\n  type: \"UPDATE_PUSSY\",\n  payload: payload,\n});\n\nexport const updateCockSize = (payload) => ({\n  type: \"UPDATE_COCK_SIZE\",\n  payload: payload,\n});\n\nexport const updateCockType = (payload) => ({\n  type: \"UPDATE_COCK_TYPE\",\n  payload: payload,\n});\n\nexport const updateBodyTypes = (payload) => ({\n  type: \"UPDATE_BODY_TYPES\",\n  payload: payload,\n});\n\nexport const updateCompanions = (payload) => ({\n  type: \"UPDATE_COMPANIONS\",\n  payload: payload,\n});\n\nexport const updatePerksAndPowers = (payload) => ({\n  type: \"UPDATE_PERKS_AND_POWERS\",\n  payload: payload,\n});\n\nexport const updateOtherStuff = (payload) => ({\n  type: \"UPDATE_OTHER_STUFF\",\n  payload: payload,\n});\n\nexport const updateDrawbacks = (payload) => ({\n  type: \"UPDATE_DRAWBACKS\",\n  payload: payload,\n});\n\nexport const updateJobs = (payload) => ({\n  type: \"UPDATE_JOBS\",\n  payload: payload,\n});\n\nexport const sectionActions = {\n  ass: updateAss,\n  gender: updateGender,\n  intelligence: updateIntelligence,\n  height: updateHeight,\n  expression: updateExpression,\n  accent: updateAccent,\n  hair: updateHair,\n  breasts: updateBreasts,\n  \"mid-section\": updateMidSection,\n  hips: updateHips,\n  pussy: updatePussy,\n  cock_size: updateCockSize,\n  cock_type: updateCockType,\n  body_types: updateBodyTypes,\n  companions: updateCompanions,\n  perks_and_powers: updatePerksAndPowers,\n  other_stuff: updateOtherStuff,\n  drawbacks: updateDrawbacks,\n  jobs: updateJobs,\n};\n","import React from \"react\";\nimport { Drawer, Button, Typography } from \"@material-ui/core\";\nimport { getSectionTitlesArray } from \"../../redux/selectors\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { updateLocation } from \"../../redux/actions\";\nimport styles from \"../../styles\";\n\nconst NavigationDrawer = ({\n  handleBackgroundClick,\n  sections,\n  open,\n  updateLocation,\n  location,\n}) => {\n  const classes = styles.dialogStyles();\n  return (\n    <Drawer\n      open={open}\n      ModalProps={{ onBackdropClick: () => handleBackgroundClick(!open) }}\n      anchor=\"left\"\n      classes={{ paper: classes.dialog }}\n    >\n      {sections.map((section, index) => {\n        return (\n          <Button\n            key={`drawer-link-${index + 1}-${section.link}`}\n            component={Link}\n            onClick={() => {\n              handleBackgroundClick(!open);\n              return updateLocation(section.link);\n            }}\n            to={section.link}\n            className={location === section.link ? classes.selectedButton : \"\"}\n          >\n            <Typography>{section.title}</Typography>\n          </Button>\n        );\n      })}\n    </Drawer>\n  );\n};\n\nNavigationDrawer.defaultProps = {\n  open: true,\n  handleBackgroundClick: () => null,\n  updateLocation: () => null,\n  sections: [],\n  classes: {},\n  location: \"\",\n};\n\nconst mapStateToProps = (state) => ({\n  sections: getSectionTitlesArray(state),\n});\n\nexport default connect(mapStateToProps, { updateLocation })(NavigationDrawer);\n","import React, { useState, Fragment } from \"react\";\n\nimport AppBar from \"../application-bar\";\nimport NavigationDrawer from \"../drawer\";\n\nconst Navigator = () => {\n  const [drawerOpen, handleDrawerToggle] = useState(false);\n  return (\n    <Fragment>\n      <AppBar\n        handleHamburgerClick={handleDrawerToggle}\n        drawerOpen={drawerOpen}\n      />\n      <NavigationDrawer\n        open={drawerOpen}\n        handleBackgroundClick={handleDrawerToggle}\n      />\n    </Fragment>\n  );\n};\n\nexport default Navigator;\n","import React from \"react\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { getPreviousAndNextSection } from \"../../redux/selectors\";\nimport { connect } from \"react-redux\";\nimport ArrowRight from \"@material-ui/icons/ArrowForward\";\nimport ArrowLeft from \"@material-ui/icons/ArrowBack\";\nimport { updateLocation } from \"../../redux/actions\";\n\nconst ArrowNavigation = ({ prevNext, updateLocation }) => {\n  return (\n    <Grid container justify=\"space-between\">\n      <IconButton\n        component={Link}\n        onClick={() => updateLocation(prevNext[0].link)}\n        to={`/${prevNext[0].link}`}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <IconButton\n        component={Link}\n        onClick={() => {\n          return updateLocation(prevNext[1].link);\n        }}\n        to={`/${prevNext[1].link}`}\n      >\n        <ArrowRight />\n      </IconButton>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  prevNext: getPreviousAndNextSection(state),\n});\n\nexport default connect(mapStateToProps, { updateLocation })(ArrowNavigation);\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Typography,\n  CircularProgress,\n  withWidth,\n} from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport { Img } from \"react-image\";\n\nimport styles from \"../../styles\";\n\nconst ChoiceCard = ({ data, handleClick, picked, disabled, width }) => {\n  const classes = styles.cardStyles();\n  const buttonStyles = {\n    backgroundColor: picked ? \"green\" : \"white\",\n    textTransform: \"none\",\n    height: \"100%\",\n  };\n\n  const imageSection = (\n    <Grid item xs={12}>\n      <Grid container justify=\"center\">\n        <Img\n          style={{\n            height: \"300px\",\n            width: [\"xs\", \"sm\"].includes(width) ? \"100%\" : \"initial\",\n            objectFit: \"fill\",\n          }}\n          src={data.src}\n          loader={<CircularProgress />}\n          unloader={<CircularProgress />}\n        />\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Button\n      component={Card}\n      disabled={disabled}\n      onClick={() => handleClick(data)}\n      style={buttonStyles}\n      classes={{ root: classes.button, label: classes.label }}\n    >\n      <Grid container justify=\"space-between\">\n        {imageSection}\n        <Grid item xs={12} style={{ padding: \"8px 0\" }}>\n          <Typography variant=\"h5\">{data.title}</Typography>\n        </Grid>\n        {data?.personality_score && (\n          <Grid item xs={12}>\n            <Typography>{data.personality_score}</Typography>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Typography>\n            <Interweave content={data.description} />\n          </Typography>\n          {data?.drawback && (\n            <Typography>\n              Take the drawback\n              <br />\n              {`\"${data.drawback}\"`}\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </Button>\n  );\n};\n\nChoiceCard.defaultProps = {\n  handleClick: (data) => console.log(data),\n};\n\nexport default withWidth()(ChoiceCard);\n","import React, { Fragment } from \"react\";\nimport { GridList, withWidth, GridListTile } from \"@material-ui/core\";\nimport { map } from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport ChoiceCard from \"../choice-card\";\nimport {\n  getLocationChoicesNames,\n  getDisabledDrawbacks,\n} from \"../../redux/selectors\";\n\nconst columns = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 3,\n  xl: 3,\n};\n\nconst ChoiceList = ({\n  choices,\n  width,\n  handleClick,\n  location,\n  locationChoices,\n  disabledDrawbacks,\n}) => {\n  return (\n    <Fragment>\n      <GridList\n        cols={columns[width]}\n        cellHeight=\"auto\"\n        spacing={16}\n        style={{\n          width: \"100%\",\n          margin: 0,\n          justifyContent: \"space-evenly\",\n          padding: \"16px 0\",\n        }}\n      >\n        {map(choices.toJS(), (choice, index) => {\n          return (\n            <GridListTile key={`grid-list-${choice.title}-${index}`}>\n              <ChoiceCard\n                data={choice}\n                handleClick={handleClick}\n                location={location}\n                picked={locationChoices.includes(choice.title)}\n                disabled={disabledDrawbacks.includes(choice.title)}\n              />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    locationChoices: getLocationChoicesNames(state),\n    disabledDrawbacks: getDisabledDrawbacks(state),\n  };\n};\n\nexport default connect(mapStateToProps)(withWidth()(ChoiceList));\n","import React from \"react\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport Interweave from \"interweave\";\nimport { Link } from \"react-router-dom\";\n\nimport { getLocationData } from \"../../redux/selectors\";\nimport ChoiceList from \"../choice-list\";\nimport { sectionActions, updateLocation } from \"../../redux/actions\";\n\nconst Page = ({ data, handleClick, location, updateLocation }) => {\n  const quickLinks = (\n    <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Button\n            component={Link}\n            to=\"/expression\"\n            onClick={() => updateLocation(\"expression\")}\n            variant=\"contained\"\n          >\n            Expression\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            component={Link}\n            to=\"/accent\"\n            onClick={() => updateLocation(\"accent\")}\n            variant=\"contained\"\n          >\n            Accent\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Grid container style={{ padding: \"0 16px\" }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\">{data.get(\"title\")}</Typography>\n      </Grid>\n      <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n        <Typography>\n          <Interweave content={data.get(\"description\")} />\n        </Typography>\n      </Grid>\n      {location === \"drawbacks\" && quickLinks}\n      {[\"accent\", \"expression\"].includes(location) && (\n        <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n          <Button\n            component={Link}\n            to=\"/drawbacks\"\n            onClick={() => updateLocation(\"drawbacks\")}\n            variant=\"contained\"\n          >\n            Drawbacks\n          </Button>\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        {data.get(\"choices\") && (\n          <ChoiceList\n            choices={data.get(\"choices\")}\n            handleClick={handleClick}\n            location={location}\n          />\n        )}\n      </Grid>\n      {location === \"drawbacks\" && quickLinks}\n      {[\"accent\", \"expression\"].includes(location) && (\n        <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n          <Button\n            component={Link}\n            to=\"/drawbacks\"\n            onClick={() => updateLocation(\"drawbacks\")}\n            variant=\"contained\"\n          >\n            Drawbacks\n          </Button>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: getLocationData(state),\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    handleClick: (data) => dispatch(sectionActions[ownProps?.location](data)),\n    updateLocation: (data) => dispatch(updateLocation(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Navigator from \"./components/navigation\";\nimport ArrowNav from \"./components/arrow-nav\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { getSectionTitlesArray } from \"./redux/selectors\";\nimport { connect } from \"react-redux\";\nimport Page from \"./components/page\";\nimport { Divider } from \"@material-ui/core\";\n\nfunction App({ sections }) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigator />\n        <ArrowNav />\n        <Divider style={{ margin: \"0 16px\" }} />\n        <Switch>\n          {sections.map((section) => {\n            return (\n              <Route\n                key={`app-route-${section.link}`}\n                path={`/${section.link}`}\n              >\n                <Page location={section.link} />\n              </Route>\n            );\n          })}\n          <Route render={() => <Redirect to=\"/opening\" />} />\n        </Switch>\n        <Divider style={{ margin: \"0 16px\" }} />\n        <ArrowNav />\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sections: getSectionTitlesArray(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as cyoaText from \"./cyoaText.json\";\nconst text = cyoaText;\nexport default text;\n","import isEqual from \"lodash/isEqual\";\nimport sum from \"lodash/sum\";\n\nimport { getLocationChoices, getLocation, getDrawbacks } from \"./selectors\";\n\nconst updateChoiceSection = (state, section, updatedChoices) => {\n  return state.set(\n    \"choices\",\n    state.get(\"choices\").set(section, updatedChoices)\n  );\n};\n\nexport const singleChoiceUpdate = (state, choice) => {\n  const location = getLocation(state);\n  const currentChoices = getLocationChoices(state);\n  const includes = isEqual(currentChoices.toJS()[0], choice);\n  let updatedChoices = null;\n  if (includes) {\n    updatedChoices = currentChoices;\n  } else {\n    updatedChoices = currentChoices.pop().push(choice);\n  }\n  return updateChoiceSection(state, location, updatedChoices);\n};\n\nexport const getAmountOfDrawbacksTaken = (state) => {\n  return state.get(\"choices\").get(\"drawbacks\").toJS().length;\n};\n\nexport const multiChoiceUpdate = (state, choice, choiceType = \"\") => {\n  if (!choice) {\n    return state;\n  }\n  const location = choiceType ? choiceType : getLocation(state);\n  const currentChoices = state.get(\"choices\").get(location);\n  const index = currentChoices.findIndex((currentChoice) => {\n    return currentChoice.title === choice.title;\n  });\n  let updatedChoices = null;\n  if (index > -1) {\n    updatedChoices = currentChoices.delete(index);\n  } else {\n    updatedChoices = currentChoices.push(choice);\n  }\n  return updateChoiceSection(state, location, updatedChoices);\n};\n\nexport const getRelevantDrawback = (state, choice) => {\n  if (!choice?.drawback) {\n    return null;\n  }\n  const drawbacks = state\n    .get(\"outline\")\n    .get(\"sections\")\n    .get(\"drawbacks\")\n    .get(\"choices\");\n  const relevantDrawback = drawbacks.find((drawback) => {\n    return drawback.get(\"title\") === choice.drawback;\n  });\n\n  return relevantDrawback ? relevantDrawback.toJS() : null;\n};\n\nexport const expAccUpdate = (state, choice) => {\n  const location = getLocation(state);\n  const currentChoices = getLocationChoices(state);\n  const relevantDrawback = getRelevantDrawback(state, choice);\n  const includes = isEqual(currentChoices.toJS()[0], choice);\n  const currentDrawbacks = getDrawbacks(state)\n    .toJS()\n    .map((drawback) => drawback.title);\n\n  let otherRelevantDrawback = null;\n  let updatedChoices = null;\n\n  if (includes) {\n    updatedChoices = currentChoices;\n  } else {\n    otherRelevantDrawback = getRelevantDrawback(\n      state,\n      currentChoices.get(0, {})\n    );\n    updatedChoices = currentChoices.pop().push(choice);\n  }\n\n  let updatedState = updateChoiceSection(state, location, updatedChoices);\n  if (otherRelevantDrawback) {\n    updatedState = multiChoiceUpdate(\n      updatedState,\n      otherRelevantDrawback,\n      \"drawbacks\"\n    );\n  }\n\n  let newState = null;\n  if (currentDrawbacks.includes(relevantDrawback?.title)) {\n    newState = updatedState;\n  } else {\n    newState = multiChoiceUpdate(updatedState, relevantDrawback, \"drawbacks\");\n  }\n  const values = newState.get(\"choices\").reduce((acc, curr, ind) => {\n    let accumulator = acc;\n    if ([\"perks_and_powers\", \"companions\", \"other_stuff\"].includes(ind)) {\n      if (curr.size > 3) {\n        accumulator.push(-3 + curr.size);\n      } else {\n        accumulator.push(0);\n      }\n    }\n    return accumulator;\n  }, []);\n  const finalState = newState.set(\n    \"requiredDrawbacks\",\n    newState.get(\"initRequiredDrawbacks\") +\n      sum(values) -\n      getAmountOfDrawbacksTaken(newState)\n  );\n  return finalState;\n};\n\nexport const multiSectionUpdate = (state, choice) => {\n  const newState = multiChoiceUpdate(state, choice);\n  const values = newState.get(\"choices\").reduce((acc, curr, ind) => {\n    let accumulator = acc;\n    if ([\"perks_and_powers\", \"companions\", \"other_stuff\"].includes(ind)) {\n      if (curr.size > 3) {\n        accumulator.push(-3 + curr.size);\n      } else {\n        accumulator.push(0);\n      }\n    }\n    return accumulator;\n  }, []);\n  const updatedState = newState.set(\n    \"requiredDrawbacks\",\n    newState.get(\"initRequiredDrawbacks\") +\n      sum(values) -\n      getAmountOfDrawbacksTaken(newState)\n  );\n  return updatedState;\n};\n","import { fromJS, isKeyed } from \"immutable\";\nimport cyoaText from \"../data\";\nimport { singleChoiceUpdate, expAccUpdate, multiSectionUpdate } from \"./utils\";\n\nconst initialState = fromJS(\n  {\n    location: window.location.href.split(\"/\").pop()\n      ? window.location.href.split(\"/\").pop()\n      : \"opening\",\n    outline: cyoaText.default,\n    initRequiredDrawbacks: 5,\n    requiredDrawbacks: 5,\n    choices: {\n      gender: [],\n      intelligence: [],\n      height: [],\n      expression: [],\n      accent: [],\n      hair: [],\n      breasts: [],\n      \"mid-section\": [],\n      hips: [],\n      ass: [],\n      pussy: [],\n      cock_size: [],\n      cock_type: [],\n      body_types: [],\n      companions: [],\n      perks_and_powers: [],\n      other_stuff: [],\n      drawbacks: [],\n      jobs: [],\n    },\n  },\n  (key, value) => {\n    if (key === \"choices\" || key === \"sections\") {\n      return value.toOrderedMap();\n    } else if (isKeyed(value)) {\n      return value.toMap();\n    }\n    return value.toList();\n  }\n);\n\nconst singleChoiceSections = [\n  \"UPDATE_GENDER\",\n  \"UPDATE_ASS\",\n  \"UPDATE_INTELLIGENCE\",\n  \"UPDATE_HEIGHT\",\n  \"UPDATE_HAIR\",\n  \"UPDATE_BREASTS\",\n  \"UPDATE_MID-SECTION\",\n  \"UPDATE_HIPS\",\n  \"UPDATE_PUSSY\",\n  \"UPDATE_COCK_SIZE\",\n  \"UPDATE_COCK_TYPE\",\n  \"UPDATE_BODY_TYPES\",\n  \"UPDATE_JOBS\",\n];\n\nconst expressionAndAccent = [\"UPDATE_EXPRESSION\", \"UPDATE_ACCENT\"];\n\nconst multiChoiceSections = [\n  \"UPDATE_COMPANIONS\",\n  \"UPDATE_PERKS_AND_POWERS\",\n  \"UPDATE_OTHER_STUFF\",\n];\n\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === \"UPDATE_LOCATION\") {\n    return state.set(\"location\", action.payload);\n  } else if (singleChoiceSections.includes(action.type)) {\n    return singleChoiceUpdate(state, action.payload);\n  } else if (expressionAndAccent.includes(action.type)) {\n    return expAccUpdate(state, action.payload);\n  } else if (multiChoiceSections.includes(action.type)) {\n    return multiSectionUpdate(state, action.payload);\n  } else if (action.type === \"UPDATE_DRAWBACKS\") {\n    return multiSectionUpdate(state, action.payload);\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducers\";\n\nexport const store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}