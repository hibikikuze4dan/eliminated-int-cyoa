{"version":3,"sources":["redux/selectors.js","components/application-bar/index.js","redux/actions.js","components/drawer/index.js","components/navigation/index.js","components/arrow-nav/index.js","styles/index.js","components/choice-card/index.js","components/choice-list/index.js","components/page/index.js","App.js","serviceWorker.js","data/index.js","redux/utils.js","redux/reducers.js","redux/store.js","index.js"],"names":["getRequiredDrawbacks","state","get","getLocation","getChoices","getSections","createSelector","outline","getSectionTitles","sections","map","section","getSectionTitlesArray","reduce","acc","curr","key","accumulator","push","title","link","getPreviousAndNextSection","location","index","findIndex","val","length","getLocationData","getLocationChoices","choices","List","getLocationChoicesNames","toJS","choice","getExpressionAndAccentChoices","concat","getDrawbacks","getDisabledDrawbacks","relevantChoices","drawbacks","requiredDrawbacks","drawback","filter","includes","connect","drawbacksRequired","handleHamburgerClick","drawerOpen","AppBar","position","Toolbar","Grid","container","justify","IconButton","onClick","Typography","style","alignSelf","updateLocation","window","scrollTo","top","type","payload","sectionActions","ass","gender","intelligence","height","expression","accent","hair","breasts","hips","pussy","cock_size","cock_type","body_types","companions","perks_and_powers","other_stuff","jobs","NavigationDrawer","handleBackgroundClick","open","classes","Drawer","ModalProps","onBackdropClick","paper","drawer","anchor","Button","component","Link","to","className","selectedButton","defaultProps","Navigator","useState","handleDrawerToggle","prevNext","appStyles","makeStyles","div","backgroundColor","textAlign","minHeight","innerHeight","applicationBarStyles","appBar","breakdownButton","color","fontWeight","iconButton","padding","dialogStyles","dialog","gridWrapperStyles","grid","cardStyles","button","textTransform","alignItems","label","fontSize","description","openerStyles","paddingBottom","drawerStyles","ChoiceCard","data","handleClick","picked","disabled","styles","buttonStyles","imageSection","item","xs","width","objectFit","src","loader","CircularProgress","unloader","Card","root","variant","personality_score","content","console","log","columns","sm","md","lg","xl","locationChoices","disabledDrawbacks","withWidth","GridList","cols","cellHeight","spacing","margin","justifyContent","GridListTile","dispatch","ownProps","quickLinks","Divider","path","render","Boolean","hostname","match","text","updateChoiceSection","updatedChoices","set","singleChoiceUpdate","currentChoices","isEqual","pop","multiChoiceUpdate","choiceType","currentChoice","delete","getRelevantDrawback","relevantDrawback","find","expAccUpdate","currentDrawbacks","otherRelevantDrawback","updatedState","multiSectionUpdate","newState","values","ind","size","sum","getAmountOfDrawbacksTaken","initialState","fromJS","href","split","cyoaText","default","initRequiredDrawbacks","value","toOrderedMap","isKeyed","toMap","toList","singleChoiceSections","expressionAndAccent","multiChoiceSections","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c292922f.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nimport { List } from \"immutable\";\n\nexport const getRequiredDrawbacks = (state) => state.get(\"requiredDrawbacks\");\n\nexport const getOutline = (state) => state.get(\"outline\");\n\nexport const getLocation = (state) => state.get(\"location\");\n\nexport const getChoices = (state) => state.get(\"choices\");\n\nexport const getSections = createSelector(getOutline, (outline) => {\n  return outline.get(\"sections\");\n});\n\nexport const getSectionTitles = createSelector(getSections, (sections) => {\n  return sections.map((section) => section.get(\"title\"));\n});\n\nexport const getSectionTitlesArray = createSelector(\n  getSectionTitles,\n  (sections) => {\n    return sections.reduce((acc, curr, key) => {\n      const accumulator = acc;\n      accumulator.push({ title: curr, link: key });\n      return accumulator;\n    }, []);\n  }\n);\n\nexport const getPreviousAndNextSection = createSelector(\n  [getSectionTitlesArray, getLocation],\n  (sections, location) => {\n    const index = sections.findIndex((val) => {\n      return val.link === location;\n    });\n    return [\n      sections[index - 1] ? sections[index - 1] : sections[sections.length - 1],\n      sections[index + 1] ? sections[index + 1] : sections[0],\n    ];\n  }\n);\n\nexport const getLocationData = createSelector(\n  [getLocation, getSections],\n  (location, sections) => {\n    return sections.get(location);\n  }\n);\n\nexport const getLocationChoices = createSelector(\n  [getLocation, getChoices],\n  (location, choices) => {\n    return choices.get(location, List([]));\n  }\n);\n\nexport const getLocationChoicesNames = createSelector(\n  [getLocationChoices],\n  (choices) => {\n    return choices.toJS().map((choice) => choice.title);\n  }\n);\n\nexport const getExpressionAndAccentChoices = createSelector(\n  [getChoices],\n  (choices) => {\n    return choices.get(\"expression\").concat(choices.get(\"accent\"));\n  }\n);\n\nexport const getDrawbacks = createSelector([getChoices], (choices) => {\n  return choices.get(\"drawbacks\");\n});\n\nexport const getDisabledDrawbacks = createSelector(\n  [getExpressionAndAccentChoices, getDrawbacks],\n  (relevantChoices, drawbacks) => {\n    const requiredDrawbacks = relevantChoices.reduce((acc, curr) => {\n      const accumulator = acc;\n      if (curr?.drawback) {\n        accumulator.push(curr?.drawback);\n      }\n      return accumulator;\n    }, []);\n    return drawbacks\n      .filter((drawback) => {\n        return requiredDrawbacks.includes(drawback.title);\n      })\n      .reduce((curr, acc) => {\n        const accumulator = curr;\n        accumulator.push(acc.title);\n        return accumulator;\n      }, []);\n  }\n);\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Grid,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport TableChart from \"@material-ui/icons/TableChart\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { connect } from \"react-redux\";\nimport { getRequiredDrawbacks } from \"../../redux/selectors\";\n\nconst ApplicationBar = ({\n  drawbacksRequired,\n  handleHamburgerClick,\n  drawerOpen,\n}) => {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Grid container justify=\"space-between\">\n          <IconButton onClick={() => handleHamburgerClick(!drawerOpen)}>\n            <MenuIcon />\n          </IconButton>\n          <IconButton>\n            <TableChart />\n          </IconButton>\n          <Typography style={{ alignSelf: \"center\" }}>\n            {drawbacksRequired}\n          </Typography>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  drawbacksRequired: getRequiredDrawbacks(state),\n});\n\nexport default connect(mapStateToProps)(ApplicationBar);\n","export const updateLocation = (location) => {\n  window.scrollTo({ top: 0 });\n  return {\n    type: \"UPDATE_LOCATION\",\n    payload: location,\n  };\n};\n\nexport const updateAss = (ass) => ({\n  type: \"UPDATE_ASS\",\n  payload: ass,\n});\n\nexport const updateGender = (payload) => ({\n  type: \"UPDATE_GENDER\",\n  payload: payload,\n});\n\nexport const updateIntelligence = (payload) => ({\n  type: \"UPDATE_INTELLIGENCE\",\n  payload: payload,\n});\n\nexport const updateHeight = (payload) => ({\n  type: \"UPDATE_HEIGHT\",\n  payload: payload,\n});\n\nexport const updateExpression = (payload) => ({\n  type: \"UPDATE_EXPRESSION\",\n  payload: payload,\n});\n\nexport const updateAccent = (payload) => ({\n  type: \"UPDATE_ACCENT\",\n  payload: payload,\n});\n\nexport const updateHair = (payload) => ({\n  type: \"UPDATE_HAIR\",\n  payload: payload,\n});\n\nexport const updateBreasts = (payload) => ({\n  type: \"UPDATE_BREASTS\",\n  payload: payload,\n});\n\nexport const updateMidSection = (payload) => ({\n  type: \"UPDATE_MID-SECTION\",\n  payload: payload,\n});\n\nexport const updateHips = (payload) => ({\n  type: \"UPDATE_HIPS\",\n  payload: payload,\n});\n\nexport const updatePussy = (payload) => ({\n  type: \"UPDATE_PUSSY\",\n  payload: payload,\n});\n\nexport const updateCockSize = (payload) => ({\n  type: \"UPDATE_COCK_SIZE\",\n  payload: payload,\n});\n\nexport const updateCockType = (payload) => ({\n  type: \"UPDATE_COCK_TYPE\",\n  payload: payload,\n});\n\nexport const updateBodyTypes = (payload) => ({\n  type: \"UPDATE_BODY_TYPES\",\n  payload: payload,\n});\n\nexport const updateCompanions = (payload) => ({\n  type: \"UPDATE_COMPANIONS\",\n  payload: payload,\n});\n\nexport const updatePerksAndPowers = (payload) => ({\n  type: \"UPDATE_PERKS_AND_POWERS\",\n  payload: payload,\n});\n\nexport const updateOtherStuff = (payload) => ({\n  type: \"UPDATE_OTHER_STUFF\",\n  payload: payload,\n});\n\nexport const updateDrawbacks = (payload) => ({\n  type: \"UPDATE_DRAWBACKS\",\n  payload: payload,\n});\n\nexport const updateJobs = (payload) => ({\n  type: \"UPDATE_JOBS\",\n  payload: payload,\n});\n\nexport const sectionActions = {\n  ass: updateAss,\n  gender: updateGender,\n  intelligence: updateIntelligence,\n  height: updateHeight,\n  expression: updateExpression,\n  accent: updateAccent,\n  hair: updateHair,\n  breasts: updateBreasts,\n  \"mid-section\": updateMidSection,\n  hips: updateHips,\n  pussy: updatePussy,\n  cock_size: updateCockSize,\n  cock_type: updateCockType,\n  body_types: updateBodyTypes,\n  companions: updateCompanions,\n  perks_and_powers: updatePerksAndPowers,\n  other_stuff: updateOtherStuff,\n  drawbacks: updateDrawbacks,\n  jobs: updateJobs,\n};\n","import React from \"react\";\nimport { Drawer, Button, Typography } from \"@material-ui/core\";\nimport { getSectionTitlesArray } from \"../../redux/selectors\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { updateLocation } from \"../../redux/actions\";\n\nconst NavigationDrawer = ({\n  handleBackgroundClick,\n  sections,\n  open,\n  classes,\n  updateLocation,\n  location,\n}) => {\n  return (\n    <Drawer\n      open={open}\n      ModalProps={{ onBackdropClick: () => handleBackgroundClick(!open) }}\n      classes={{ paper: classes.drawer }}\n      anchor=\"left\"\n    >\n      {sections.map((section, index) => {\n        return (\n          <Button\n            key={`drawer-link-${index + 1}-${section.link}`}\n            component={Link}\n            onClick={() => {\n              handleBackgroundClick(!open);\n              return updateLocation(section.link);\n            }}\n            to={section.link}\n            className={location === section.link ? classes.selectedButton : \"\"}\n          >\n            <Typography>{section.title}</Typography>\n          </Button>\n        );\n      })}\n    </Drawer>\n  );\n};\n\nNavigationDrawer.defaultProps = {\n  open: true,\n  handleBackgroundClick: () => null,\n  updateLocation: () => null,\n  sections: [],\n  classes: {},\n  location: \"\",\n};\n\nconst mapStateToProps = (state) => ({\n  sections: getSectionTitlesArray(state),\n});\n\nexport default connect(mapStateToProps, { updateLocation })(NavigationDrawer);\n","import React, { useState, Fragment } from \"react\";\n\nimport AppBar from \"../application-bar\";\nimport NavigationDrawer from \"../drawer\";\n\nconst Navigator = () => {\n  const [drawerOpen, handleDrawerToggle] = useState(false);\n  return (\n    <Fragment>\n      <AppBar\n        handleHamburgerClick={handleDrawerToggle}\n        drawerOpen={drawerOpen}\n      />\n      <NavigationDrawer\n        open={drawerOpen}\n        handleBackgroundClick={handleDrawerToggle}\n      />\n    </Fragment>\n  );\n};\n\nexport default Navigator;\n","import React from \"react\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { getPreviousAndNextSection } from \"../../redux/selectors\";\nimport { connect } from \"react-redux\";\nimport ArrowRight from \"@material-ui/icons/ArrowForward\";\nimport ArrowLeft from \"@material-ui/icons/ArrowBack\";\nimport { updateLocation } from \"../../redux/actions\";\n\nconst ArrowNavigation = ({ prevNext, updateLocation }) => {\n  return (\n    <Grid container justify=\"space-between\">\n      <IconButton\n        component={Link}\n        onClick={() => updateLocation(prevNext[0].link)}\n        to={`/${prevNext[0].link}`}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <IconButton\n        component={Link}\n        onClick={() => {\n          return updateLocation(prevNext[1].link);\n        }}\n        to={`/${prevNext[1].link}`}\n      >\n        <ArrowRight />\n      </IconButton>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  prevNext: getPreviousAndNextSection(state),\n});\n\nexport default connect(mapStateToProps, { updateLocation })(ArrowNavigation);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst appStyles = makeStyles({\n  div: {\n    backgroundColor: \"#ECD078\",\n    textAlign: \"center\",\n    height: \"fit-content\",\n    minHeight: window.innerHeight,\n  },\n});\n\nconst applicationBarStyles = makeStyles({\n  appBar: {\n    backgroundColor: \"#D95B43\",\n  },\n  breakdownButton: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  iconButton: {\n    padding: \"16px 16px 16px 0\",\n    \"&:hover\": {\n      backgroundColor: \"unset\",\n    },\n  },\n});\n\nconst dialogStyles = makeStyles({\n  dialog: {\n    backgroundColor: \"#ECD078\",\n  },\n});\n\nconst gridWrapperStyles = makeStyles({\n  grid: {\n    padding: \"16px\",\n    backgroundColor: \"#ECD078\",\n    height: \"min-heeight\",\n  },\n});\n\nconst cardStyles = makeStyles({\n  button: {\n    textTransform: \"none\",\n    alignItems: \"baseline\",\n  },\n  label: {\n    height: \"100%\",\n  },\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n  },\n  description: {\n    fontSize: \"1rem\",\n  },\n  paper: {\n    alignItems: \"baseline\",\n  },\n});\n\nconst openerStyles = makeStyles({\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n  },\n  description: {\n    paddingBottom: \"16px\",\n  },\n});\n\nconst drawerStyles = makeStyles({\n  drawer: {\n    backgroundColor: \"#ECD078\",\n  },\n  selectedButton: {\n    backgroundColor: \"#D95B43\",\n  },\n});\n\nexport default {\n  applicationBarStyles,\n  appStyles,\n  dialogStyles,\n  gridWrapperStyles,\n  cardStyles,\n  openerStyles,\n  drawerStyles,\n};\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport { Img } from \"react-image\";\n\nimport styles from \"../../styles\";\n\nconst ChoiceCard = ({ data, handleClick, picked, disabled }) => {\n  const classes = styles.cardStyles();\n  const buttonStyles = {\n    backgroundColor: picked ? \"green\" : \"white\",\n    textTransform: \"none\",\n    height: \"100%\",\n  };\n\n  const imageSection = (\n    <Grid item xs={12}>\n      <Grid container justify=\"center\">\n        <Img\n          style={{ height: \"300px\", width: \"100%\", objectFit: \"fill\" }}\n          src={data.src}\n          loader={<CircularProgress />}\n          unloader={<CircularProgress />}\n        />\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Button\n      component={Card}\n      disabled={disabled}\n      onClick={() => handleClick(data)}\n      style={buttonStyles}\n      classes={{ root: classes.button, label: classes.label }}\n    >\n      <Grid container justify=\"space-between\">\n        {imageSection}\n        <Grid item xs={12} style={{ padding: \"8px 0\" }}>\n          <Typography variant=\"h5\">{data.title}</Typography>\n        </Grid>\n        {data?.personality_score && (\n          <Grid item xs={12}>\n            <Typography>{data.personality_score}</Typography>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Typography>\n            <Interweave content={data.description} />\n          </Typography>\n          {data?.drawback && (\n            <Typography>\n              Take the drawback\n              <br />\n              {`\"${data.drawback}\"`}\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </Button>\n  );\n};\n\nChoiceCard.defaultProps = {\n  handleClick: (data) => console.log(data),\n};\n\nexport default ChoiceCard;\n","import React, { Fragment } from \"react\";\nimport { GridList, withWidth, GridListTile } from \"@material-ui/core\";\nimport { map } from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport ChoiceCard from \"../choice-card\";\nimport {\n  getLocationChoicesNames,\n  getDisabledDrawbacks,\n} from \"../../redux/selectors\";\n\nconst columns = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 3,\n  xl: 3,\n};\n\nconst ChoiceList = ({\n  choices,\n  width,\n  handleClick,\n  location,\n  locationChoices,\n  disabledDrawbacks,\n}) => {\n  return (\n    <Fragment>\n      <GridList\n        cols={columns[width]}\n        cellHeight=\"auto\"\n        spacing={16}\n        style={{\n          width: \"100%\",\n          margin: 0,\n          justifyContent: \"space-evenly\",\n          padding: \"16px 0\",\n        }}\n      >\n        {map(choices.toJS(), (choice, index) => {\n          return (\n            <GridListTile key={`grid-list-${choice.title}-${index}`}>\n              <ChoiceCard\n                data={choice}\n                handleClick={handleClick}\n                location={location}\n                picked={locationChoices.includes(choice.title)}\n                disabled={disabledDrawbacks.includes(choice.title)}\n              />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    locationChoices: getLocationChoicesNames(state),\n    disabledDrawbacks: getDisabledDrawbacks(state),\n  };\n};\n\nexport default connect(mapStateToProps)(withWidth()(ChoiceList));\n","import React from \"react\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport Interweave from \"interweave\";\nimport { Link } from \"react-router-dom\";\n\nimport { getLocationData } from \"../../redux/selectors\";\nimport ChoiceList from \"../choice-list\";\nimport { sectionActions, updateLocation } from \"../../redux/actions\";\n\nconst Page = ({ data, handleClick, location, updateLocation }) => {\n  const quickLinks = (\n    <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Button\n            component={Link}\n            to=\"/expression\"\n            onClick={() => updateLocation(\"expression\")}\n            variant=\"contained\"\n          >\n            Expression\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button\n            component={Link}\n            to=\"/accent\"\n            onClick={() => updateLocation(\"accent\")}\n            variant=\"contained\"\n          >\n            Accent\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <Grid container style={{ padding: \"0 16px\" }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h3\">{data.get(\"title\")}</Typography>\n      </Grid>\n      <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n        <Typography>\n          <Interweave content={data.get(\"description\")} />\n        </Typography>\n      </Grid>\n      {location === \"drawbacks\" && quickLinks}\n      {[\"accent\", \"expression\"].includes(location) && (\n        <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n          <Button\n            component={Link}\n            to=\"/drawbacks\"\n            onClick={() => updateLocation(\"drawbacks\")}\n            variant=\"contained\"\n          >\n            Drawbacks\n          </Button>\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        {data.get(\"choices\") && (\n          <ChoiceList\n            choices={data.get(\"choices\")}\n            handleClick={handleClick}\n            location={location}\n          />\n        )}\n      </Grid>\n      {location === \"drawbacks\" && quickLinks}\n      {[\"accent\", \"expression\"].includes(location) && (\n        <Grid item xs={12} style={{ padding: \"16px 0\" }}>\n          <Button\n            component={Link}\n            to=\"/drawbacks\"\n            onClick={() => updateLocation(\"drawbacks\")}\n            variant=\"contained\"\n          >\n            Drawbacks\n          </Button>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: getLocationData(state),\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  console.log(dispatch, ownProps);\n  return {\n    handleClick: (data) => dispatch(sectionActions[ownProps?.location](data)),\n    updateLocation: (data) => dispatch(updateLocation(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Navigator from \"./components/navigation\";\nimport ArrowNav from \"./components/arrow-nav\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { getSectionTitlesArray } from \"./redux/selectors\";\nimport { connect } from \"react-redux\";\nimport Page from \"./components/page\";\nimport { Divider } from \"@material-ui/core\";\n\nfunction App({ sections }) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigator />\n        <ArrowNav />\n        <Divider style={{ margin: \"0 16px\" }} />\n        <Switch>\n          {sections.map((section) => {\n            return (\n              <Route\n                key={`app-route-${section.link}`}\n                path={`/${section.link}`}\n              >\n                <Page location={section.link} />\n              </Route>\n            );\n          })}\n          <Route render={() => <Redirect to=\"/opening\" />} />\n        </Switch>\n        <Divider style={{ margin: \"0 16px\" }} />\n        <ArrowNav />\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sections: getSectionTitlesArray(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as cyoaText from \"./cyoaText.json\";\nconst text = cyoaText;\nexport default text;\n","import isEqual from \"lodash/isEqual\";\nimport sum from \"lodash/sum\";\n\nimport { getLocationChoices, getLocation, getDrawbacks } from \"./selectors\";\n\nconst updateChoiceSection = (state, section, updatedChoices) => {\n  return state.set(\n    \"choices\",\n    state.get(\"choices\").set(section, updatedChoices)\n  );\n};\n\nexport const singleChoiceUpdate = (state, choice) => {\n  const location = getLocation(state);\n  const currentChoices = getLocationChoices(state);\n  const includes = isEqual(currentChoices.toJS()[0], choice);\n  let updatedChoices = null;\n  if (includes) {\n    updatedChoices = currentChoices.pop();\n  } else {\n    updatedChoices = currentChoices.pop().push(choice);\n  }\n  return updateChoiceSection(state, location, updatedChoices);\n};\n\nexport const getAmountOfDrawbacksTaken = (state) => {\n  return state.get(\"choices\").get(\"drawbacks\").toJS().length;\n};\n\nexport const multiChoiceUpdate = (state, choice, choiceType = \"\") => {\n  if (!choice) {\n    return state;\n  }\n  const location = choiceType ? choiceType : getLocation(state);\n  const currentChoices = state.get(\"choices\").get(location);\n  const index = currentChoices.findIndex((currentChoice) => {\n    return currentChoice.title === choice.title;\n  });\n  let updatedChoices = null;\n  if (index > -1) {\n    updatedChoices = currentChoices.delete(index);\n  } else {\n    updatedChoices = currentChoices.push(choice);\n  }\n  return updateChoiceSection(state, location, updatedChoices);\n};\n\nexport const getRelevantDrawback = (state, choice) => {\n  if (!choice?.drawback) {\n    return null;\n  }\n  const drawbacks = state\n    .get(\"outline\")\n    .get(\"sections\")\n    .get(\"drawbacks\")\n    .get(\"choices\");\n  const relevantDrawback = drawbacks.find((drawback) => {\n    return drawback.get(\"title\") === choice.drawback;\n  });\n\n  return relevantDrawback ? relevantDrawback.toJS() : null;\n};\n\nexport const expAccUpdate = (state, choice) => {\n  const location = getLocation(state);\n  const currentChoices = getLocationChoices(state);\n  const relevantDrawback = getRelevantDrawback(state, choice);\n  const includes = isEqual(currentChoices.toJS()[0], choice);\n  const currentDrawbacks = getDrawbacks(state)\n    .toJS()\n    .map((drawback) => drawback.title);\n\n  let otherRelevantDrawback = null;\n  let updatedChoices = null;\n\n  if (includes) {\n    updatedChoices = currentChoices.pop();\n  } else {\n    otherRelevantDrawback = getRelevantDrawback(\n      state,\n      currentChoices.get(0, {})\n    );\n    updatedChoices = currentChoices.pop().push(choice);\n  }\n\n  let updatedState = updateChoiceSection(state, location, updatedChoices);\n  if (otherRelevantDrawback) {\n    updatedState = multiChoiceUpdate(\n      updatedState,\n      otherRelevantDrawback,\n      \"drawbacks\"\n    );\n  }\n\n  if (currentDrawbacks.includes(relevantDrawback.title)) {\n    return updatedState;\n  }\n  return multiChoiceUpdate(updatedState, relevantDrawback, \"drawbacks\");\n};\n\nexport const multiSectionUpdate = (state, choice) => {\n  const newState = multiChoiceUpdate(state, choice);\n  const values = newState.get(\"choices\").reduce((acc, curr, ind) => {\n    let accumulator = acc;\n    if ([\"perks_and_powers\", \"companions\", \"other_stuff\"].includes(ind)) {\n      if (curr.size > 3) {\n        accumulator.push(-3 + curr.size);\n      } else {\n        accumulator.push(0);\n      }\n    }\n    return accumulator;\n  }, []);\n  const updatedState = newState.set(\n    \"requiredDrawbacks\",\n    newState.get(\"initRequiredDrawbacks\") +\n      sum(values) -\n      getAmountOfDrawbacksTaken(newState)\n  );\n  return updatedState;\n};\n","import { fromJS, isKeyed } from \"immutable\";\nimport cyoaText from \"../data\";\nimport { singleChoiceUpdate, expAccUpdate, multiSectionUpdate } from \"./utils\";\n\nconst initialState = fromJS(\n  {\n    location: window.location.href.split(\"/\").pop()\n      ? window.location.href.split(\"/\").pop()\n      : \"opening\",\n    outline: cyoaText.default,\n    initRequiredDrawbacks: 5,\n    requiredDrawbacks: 5,\n    choices: {\n      gender: [],\n      intelligence: [],\n      height: [],\n      expression: [],\n      accent: [],\n      hair: [],\n      breasts: [],\n      \"mid-section\": [],\n      hips: [],\n      ass: [],\n      pussy: [],\n      cock_size: [],\n      cock_type: [],\n      body_types: [],\n      companions: [],\n      perks_and_powers: [],\n      other_stuff: [],\n      drawbacks: [],\n      jobs: [],\n    },\n  },\n  (key, value) => {\n    if (key === \"choices\" || key === \"sections\") {\n      return value.toOrderedMap();\n    } else if (isKeyed(value)) {\n      return value.toMap();\n    }\n    return value.toList();\n  }\n);\n\nconst singleChoiceSections = [\n  \"UPDATE_GENDER\",\n  \"UPDATE_ASS\",\n  \"UPDATE_INTELLIGENCE\",\n  \"UPDATE_HEIGHT\",\n  \"UPDATE_HAIR\",\n  \"UPDATE_BREASTS\",\n  \"UPDATE_MID-SECTION\",\n  \"UPDATE_HIPS\",\n  \"UPDATE_PUSSY\",\n  \"UPDATE_COCK_SIZE\",\n  \"UPDATE_COCK_TYPE\",\n  \"UPDATE_BODY_TYPES\",\n  \"UPDATE_JOBS\",\n];\n\nconst expressionAndAccent = [\"UPDATE_EXPRESSION\", \"UPDATE_ACCENT\"];\n\nconst multiChoiceSections = [\n  \"UPDATE_COMPANIONS\",\n  \"UPDATE_PERKS_AND_POWERS\",\n  \"UPDATE_OTHER_STUFF\",\n];\n\nexport const rootReducer = (state = initialState, action) => {\n  if (action.type === \"UPDATE_LOCATION\") {\n    return state.set(\"location\", action.payload);\n  } else if (singleChoiceSections.includes(action.type)) {\n    return singleChoiceUpdate(state, action.payload);\n  } else if (expressionAndAccent.includes(action.type)) {\n    return expAccUpdate(state, action.payload);\n  } else if (multiChoiceSections.includes(action.type)) {\n    return multiSectionUpdate(state, action.payload);\n  } else if (action.type === \"UPDATE_DRAWBACKS\") {\n    return multiSectionUpdate(state, action.payload);\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducers\";\n\nexport const store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}